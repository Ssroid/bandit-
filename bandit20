문제>
There is a setuid binary in the homedirectory that does the following: 
it makes a connection to localhost on the port you specify as a commandline argument. 
It then reads a line of text from the connection and compares it to the password in the previous level (bandit20). 
If the password is correct, it will transmit the password for the next level (bandit21).

NOTE: Try connecting to your own network daemon to see if it works as you think\

명령어: ssh, nc, cat, bash, screen, tmux, Unix ‘job control’ (bg, fg, jobs, &, CTRL-Z, …)
번역>
홈 디렉터리에 다음 작업을 수행하는 setuid 이진 파일이 있습니다.
명령줄 인수로 지정한 포트의 localhost에 연결합니다.
그런 다음 연결에서 텍스트 줄을 읽고 이전 수준(bandit20)의 암호와 비교합니다.
암호가 올바르면 다음 수준(bandit21)의 암호를 전송합니다.

참고: 자신의 네트워크 데몬에 연결하여 원하는 대로 작동하는지 확인하십시오.

풀이>
$ openssl s_client -connect localhost:[port] 지난번과 같이 하는건가?
근데 지정한포트가 머지 2220인건가?
$ cat /etc/bandit_pass/bandit20    # GbKksEFF4yrVs6il55v6gwY5aVje5f0j

$ ./suconnect openssl s_client -connect localhost:2220 
이걸해도 소용이없다.. 음 도움필요!

첫째 열려있는 포트를 확인하기!
$ nmap localhost   # 22, 113, 30000 번의 포트가 열려있다.
$ openssl s_client -connect localhost:113
이짓을 했지만 특별한 수확은 없다.. 이담은 어케해야하지..

nc : $nc(netcat) [옵션] [호스트명] [포트] , 넷켓은 TC나 UDP프로토콜을 사용하는 네트워크에서
데이터를 읽고 쓰는 유틸리티 프로그램

두개의 터미널을 실행시키고 
$ nc -l -p 1234 localhost   #호스트 localhost로 포트 1234 로 열린다.

다른 터미널로 
$ nc localhost 1234    #하면은 서로 연결이 된다.
이후에 2번 터미널로 $ ./suconnect 1234
을 하면은 1234포트로 파일을 실행하고 1번 터미널에 값을 bandit20키를 넣으면 패스워드를 알려줌

GbKksEFF4yrVs6il55v6gwY5aVje5f0j
Read: GbKksEFF4yrVs6il55v6gwY5aVje5f0j
Password matches, sending next password

1번터미널에 키값을 알려줌 : gE269g2h3mw3pwgrj0Ha9Uoqen1c9DGr




